{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workspace": {
      "type": "String"
    }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2020-08-01",
      "name": "[concat(parameters('workspace'), '/Potential_PowerShell_Execution_Via_DLL')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "eTag": "*",
        "displayName": "Potential PowerShell Execution Via DLL",
        "category": "Hunting Queries",
        "query": "DeviceProcessEvents\n| where (ProcessCommandLine contains \"Default.GetString\" or ProcessCommandLine contains \"DownloadString\" or ProcessCommandLine contains \"FromBase64String\" or ProcessCommandLine contains \"ICM \" or ProcessCommandLine contains \"IEX \" or ProcessCommandLine contains \"Invoke-Command\" or ProcessCommandLine contains \"Invoke-Expression\") and ((FolderPath endswith \"\\\\InstallUtil.exe\" or FolderPath endswith \"\\\\RegAsm.exe\" or FolderPath endswith \"\\\\RegSvcs.exe\" or FolderPath endswith \"\\\\regsvr32.exe\" or FolderPath endswith \"\\\\rundll32.exe\") or (ProcessVersionInfoOriginalFileName in~ (\"InstallUtil.exe\", \"RegAsm.exe\", \"RegSvcs.exe\", \"REGSVR32.EXE\", \"RUNDLL32.EXE\")))",
        "version": 1,
        "tags": [
          {
            "name": "description",
            "value": "Detects potential PowerShell execution from a DLL instead of the usual PowerShell process as seen used in PowerShdll.\nThis detection assumes that PowerShell commands are passed via the CommandLine.\n"
          },
          {
            "name": "tactics",
            "value": "Defense Evasion"
          },
          {
            "name": "relevantTechniques",
            "value": "T1218"
          }
        ]
      }
    }
  ]
}
