{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workspace": {
      "type": "String"
    }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2020-08-01",
      "name": "[concat(parameters('workspace'), '/HackTool_-_Jlaive_In-Memory_Assembly_Execution')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "eTag": "*",
        "displayName": "HackTool - Jlaive In-Memory Assembly Execution",
        "category": "Hunting Queries",
        "query": "DeviceProcessEvents\n| where (InitiatingProcessCommandLine endswith \".bat\" and InitiatingProcessFolderPath endswith \"\\\\cmd.exe\") and (((ProcessCommandLine contains \"powershell.exe\" and ProcessCommandLine contains \".bat.exe\") and FolderPath endswith \"\\\\xcopy.exe\") or ((ProcessCommandLine contains \"pwsh.exe\" and ProcessCommandLine contains \".bat.exe\") and FolderPath endswith \"\\\\xcopy.exe\") or ((ProcessCommandLine contains \"+s\" and ProcessCommandLine contains \"+h\" and ProcessCommandLine contains \".bat.exe\") and FolderPath endswith \"\\\\attrib.exe\"))",
        "version": 1,
        "tags": [
          {
            "name": "description",
            "value": "Detects the use of Jlaive to execute assemblies in a copied PowerShell"
          },
          {
            "name": "tactics",
            "value": "Execution"
          },
          {
            "name": "relevantTechniques",
            "value": "T1059"
          }
        ]
      }
    }
  ]
}
